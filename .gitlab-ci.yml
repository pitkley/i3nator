stages:
    - prepare
    - push
    - build
    - test

.prepare-rust-image: &prepare-rust-image
    stage: prepare
    tags:
        - docker-available
    script:
        - JOB_NAME=( $CI_JOB_NAME )
        - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
        - sed -i "0,/FROM /{s/:.*/:${JOB_NAME[3]}/}" Dockerfile.build
        - docker pull "$(grep '^FROM' Dockerfile.build | awk '{ print $2; }' | head -n1)"
        - docker build -t "${CI_REGISTRY_IMAGE}/build:${JOB_NAME[3]}" -f Dockerfile.build .

prepare rust image stable: *prepare-rust-image
prepare rust image beta: *prepare-rust-image
prepare rust image nightly: *prepare-rust-image

.push-rust-image: &push-rust-image
    stage: push
    tags:
        - docker-available
    script:
        - JOB_NAME=( $CI_JOB_NAME )
        - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
        - docker push "${CI_REGISTRY_IMAGE}/build:${JOB_NAME[3]}"

push rust image stable: *push-rust-image
push rust image beta: *push-rust-image
push rust image nightly: *push-rust-image

rustfmt:
    stage: build
    tags:
        - docker
    image: "${CI_REGISTRY_IMAGE}/build:nightly"
    script:
        - cargo install rustfmt-nightly
        - cargo fmt -- --write-mode diff

build dynamic binary on stable:
    stage: build
    tags:
        - docker
    image: "${CI_REGISTRY_IMAGE}/build:stable"
    script:
        - cargo build --verbose
    artifacts:
        name: "$CI_JOB_NAME"
        paths:
            - Cargo.toml
            - Cargo.lock

build dynamic binary on beta:
    stage: build
    tags:
        - docker
    image: "${CI_REGISTRY_IMAGE}/build:beta"
    script:
        - cargo build --verbose
    artifacts:
        name: "$CI_JOB_NAME"
        paths:
            - Cargo.toml
            - Cargo.lock

build dynamic binary on nightly:
    stage: build
    tags:
        - docker
    image: "${CI_REGISTRY_IMAGE}/build:nightly"
    script:
        - cargo build --verbose
    allow_failure: true
    artifacts:
        name: "$CI_JOB_NAME"
        paths:
            - Cargo.toml
            - Cargo.lock

build static binary:
    stage: build
    tags:
        - rust-cross
    script:
        - cross build --target x86_64-unknown-linux-musl --release
        - cp target/x86_64-unknown-linux-musl/release/i3nator i3nator
    artifacts:
        name: "$CI_JOB_NAME"
        paths:
            - Cargo.toml
            - Cargo.lock
            - i3nator

test dynamic binary on stable:
    stage: test
    tags:
        - docker
    image: "${CI_REGISTRY_IMAGE}/build:stable"
    dependencies: []
    script:
        - cargo test -- --nocapture
        - cargo test -j1 --features sequential-tests -- --test-threads 1 --nocapture

test dynamic binary on beta:
    stage: test
    tags:
        - docker
    image: "${CI_REGISTRY_IMAGE}/build:beta"
    dependencies: []
    script:
        - cargo test -- --nocapture
        - cargo test -j1 --features sequential-tests -- --test-threads 1 --nocapture

test dynamic binary on nightly:
    stage: test
    tags:
        - docker
    image: "${CI_REGISTRY_IMAGE}/build:nightly"
    dependencies: []
    script:
        - cargo test -- --nocapture
        - cargo test -j1 --features sequential-tests -- --test-threads 1 --nocapture
    allow_failure: true

test static binary:
    stage: test
    tags:
        - rust-cross
    dependencies: []
    script:
        - cross test --target x86_64-unknown-linux-musl -- --nocapture
        - cross test --target x86_64-unknown-linux-musl -j1 --features sequential-tests -- --test-threads 1 --nocapture
