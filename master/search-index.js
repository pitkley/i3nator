var searchIndex={};
searchIndex["i3nator"] = {"doc":"i3nator","i":[[0,"configfiles","i3nator","Module consolidating common functionality between projects…",null,null],[3,"ConfigFileImpl","i3nator::configfiles","Helping type to consolidate common functionality between…",null,null],[12,"name","","The name of the configfile.",0,null],[12,"path","","The path to the configfile.",0,null],[5,"list","","Get a list of all configfile names for a given prefix.",null,[[["s"]],[["osstring"],["vec",["osstring"]]]]],[8,"ConfigFile","","Helping type to consolidate common functionality between…",null,null],[10,"copy","","Create a copy of the current configfile, that is a copy of…",1,[[["s"],["self"]],["result"]]],[10,"create","","Create a configfile given a `name`.",1,[[["s"]],["result"]]],[10,"create_from_template","","Create a configfile given a `name`, pre-filling it with a…",1,[[["s"]],["result"]]],[10,"delete","","Delete this configfile from disk.",1,[[["self"]],["result"]]],[10,"from_path","","Opens an existing configfile for a given path.",1,[[["p"]],["result"]]],[10,"list","","Get a list of all configfile names.",1,[[],[["osstring"],["vec",["osstring"]]]]],[10,"name","","Returns the name of this configfile.",1,[[["self"]],["string"]]],[10,"open","","Opens an existing configfile using a `name`.",1,[[["s"]],["result"]]],[10,"path","","Returns the path to the configfile.",1,[[["self"]],["pathbuf"]]],[10,"prefix","","Return the prefix associated with this type of configfile.",1,[[],["osstr"]]],[10,"rename","","Rename the current configfile.",1,[[["s"],["self"]],["result"]]],[10,"verify","","This verifies the project's configuration, without storing…",1,[[["self"]],["result"]]],[11,"create","","Create a configfile given a `name` and `prefix`.",0,[[["s"]],["result"]]],[11,"create_from_template","","Create a configfile given a `name`, pre-filling it with a…",0,[[["s"]],["result"]]],[11,"open","","Opens an existing configfile using a `name`.",0,[[["s"]],["result"]]],[0,"errors","i3nator","Errors, using [`error-chain`][error-chain].",null,null],[3,"Error","i3nator::errors","The Error type.",null,null],[12,"0","","The kind of the error.",2,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"I3EstablishError","","Error caused by `i3ipc`, on establishing a connection.",3,null],[13,"I3MessageError","","Error caused by `i3ipc`, on sending a message.",3,null],[13,"IoError","","Error mapping to `std::io::Error`.",3,null],[13,"Utf8Error","","Error mapping to `std::str::Utf8Error`.",3,null],[13,"TomlError","","Error caused by `toml`, on deserializing using Serde.",3,null],[13,"Msg","","A convenient variant for String.",3,null],[13,"CantBeImplemented","","An error that occurs if a trait-function is called that…",3,null],[13,"CommandSplittingFailed","","An error that can occur when splitting a string into a…",3,null],[13,"ConfigExists","","An error that occurs if a project under the same name…",3,null],[13,"EditorNotFound","","An error that occurs when the default editor is not…",3,null],[13,"InvalidUtF8Path","","An error that occurs when a `Path` (i.e. `OsStr`) cannot…",3,null],[13,"PathDoesntExist","","An error that occurs if a specified path does not exist.",3,null],[13,"TextOrKeyInputFailed","","An error that occurs if text or key-presses could not be…",3,null],[13,"UnknownConfig","","An error that occurs if a project does not exist under a…",3,null],[6,"Result","","Convenient wrapper around `std::Result`.",null,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with…",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the…",4,[[["f"]],[["result",["error"]],["error"]]]],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",2,[[["errorkind"]],["error"]]],[11,"with_chain","","Constructs a chained error from another error and a kind,…",2,[[["k"],["e"]],["error"]]],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a…",2,[[["error"],["k"],["box",["error"]]],["error"]]],[11,"kind","","Returns the kind of the error.",2,[[["self"]],["errorkind"]]],[11,"iter","","Iterates over the error chain.",2,[[["self"]],["iter"]]],[11,"backtrace","","Returns the backtrace associated with this error.",2,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"chain_err","","Extends the error chain with a new entry.",2,[[["f"]],["error"]]],[11,"description","","A short description of the error. This method is identical…",2,[[["self"]],["str"]]],[11,"description","","A string describing the error kind.",3,[[["self"]],["str"]]],[0,"layouts","i3nator","Module for layout handling.",null,null],[3,"Layout","i3nator::layouts","A structure representing a managed i3-layout.",null,null],[12,"name","","The name of the layout.",5,null],[12,"path","","The path to the layout configuration.",5,null],[5,"list","","Get a list of all layout names.",null,[[],[["osstring"],["vec",["osstring"]]]]],[0,"projects","i3nator","Module for project handling.",null,null],[3,"Project","i3nator::projects","A structure representing a `i3nator` project.",null,null],[12,"name","","The name of the project.",6,null],[12,"path","","The path to the project configuration.",6,null],[5,"list","","Get a list of all project names.",null,[[],[["osstring"],["vec",["osstring"]]]]],[11,"config","","Gets the project's configuration, loading and storing it…",6,[[["self"]],[["result",["config"]],["config"]]]],[11,"start","","Start the project.",6,[[["osstr"],["str"],["option",["str"]],["i3connection"],["self"],["option",["osstr"]]],["result"]]],[0,"types","i3nator","The types in this module make up the structure of the…",null,null],[3,"Config","i3nator::types","This is the parent type defining the complete project…",null,null],[12,"general","","The general configuration section.",7,null],[12,"applications","","The applications configuration list.",7,null],[3,"General","","The general configuration section.",null,null],[12,"working_directory","","The working directory defines in which directory-context…",8,null],[12,"workspace","","If the workspace is `Some`, `i3` will be instructed to…",8,null],[12,"layout","","The layout to append to a workspace.",8,null],[3,"Application","","The applications configuration.",null,null],[12,"command","","The command used for starting an application.",9,null],[12,"working_directory","","The working directory defines in which directory-context…",9,null],[12,"exec","","Commands to execute or keys to simulate after application…",9,null],[3,"ApplicationCommand","","The command used for starting an application.",null,null],[12,"program","","The executable to start.",10,null],[12,"args","","A list of arguments to pass to the executable.",10,null],[3,"Exec","","Commands to execute or keys to simulate after application…",null,null],[12,"commands","","List of text or keys to input into the application.",11,null],[12,"exec_type","","Defines how the commands above should be interpreted.",11,null],[12,"timeout","","Specify a timeout after which a command has to be…",11,null],[4,"Layout","","This holds the layout, in multiple formats.",null,null],[13,"Contents","","The layout is provided directly as a string.",12,null],[13,"Managed","","The name of a managed layout",12,null],[13,"Path","","The layout is provided as a path.",12,null],[4,"ExecType","","Defines how the commands in [`Exec`][struct-Exec] should…",null,null],[13,"Text","","Interpret the commands given as separate text-lines,…",13,null],[13,"TextNoReturn","","Interpret the commands given as text, but do not input a…",13,null],[13,"Keys","","Interpret the commands given as key presses.",13,null],[11,"from","i3nator::configfiles","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","i3nator::errors","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","i3nator::layouts","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","i3nator::projects","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","i3nator::types","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"copy","i3nator::configfiles","",0,[[["s"],["self"]],["result"]]],[11,"create","","",0,[[["s"]],["result"]]],[11,"create_from_template","","",0,[[["s"]],["result"]]],[11,"delete","","",0,[[["self"]],["result"]]],[11,"from_path","","",0,[[["p"]],["result"]]],[11,"list","","",0,[[],[["osstring"],["vec",["osstring"]]]]],[11,"name","","",0,[[["self"]],["string"]]],[11,"open","","",0,[[["s"]],["result"]]],[11,"path","","",0,[[["self"]],["pathbuf"]]],[11,"prefix","","",0,[[],["osstr"]]],[11,"rename","","",0,[[["s"],["self"]],["result"]]],[11,"verify","","",0,[[["self"]],["result"]]],[11,"create","i3nator::layouts","",5,[[["s"]],["result"]]],[11,"create_from_template","","",5,[[["s"]],["result"]]],[11,"from_path","","",5,[[["p"]],["result"]]],[11,"open","","",5,[[["s"]],["result"]]],[11,"copy","","",5,[[["s"],["self"]],["result"]]],[11,"delete","","",5,[[["self"]],["result"]]],[11,"rename","","",5,[[["s"],["self"]],["result"]]],[11,"verify","","",5,[[["self"]],["result"]]],[11,"list","","",5,[[],[["osstring"],["vec",["osstring"]]]]],[11,"name","","",5,[[["self"]],["string"]]],[11,"path","","",5,[[["self"]],["pathbuf"]]],[11,"prefix","","",5,[[],["osstr"]]],[11,"create","i3nator::projects","",6,[[["s"]],["result"]]],[11,"create_from_template","","",6,[[["s"]],["result"]]],[11,"from_path","","",6,[[["p"]],["result"]]],[11,"open","","",6,[[["s"]],["result"]]],[11,"copy","","",6,[[["s"],["self"]],["result"]]],[11,"delete","","",6,[[["self"]],["result"]]],[11,"rename","","",6,[[["s"],["self"]],["result"]]],[11,"verify","","",6,[[["self"]],["result"]]],[11,"list","","",6,[[],[["osstring"],["vec",["osstring"]]]]],[11,"name","","",6,[[["self"]],["string"]]],[11,"path","","",6,[[["self"]],["pathbuf"]]],[11,"prefix","","",6,[[],["osstr"]]],[11,"from","i3nator::errors","",2,[[["establisherror"]],["self"]]],[11,"from","","",2,[[["messageerror"]],["self"]]],[11,"from","","",2,[[["error"]],["self"]]],[11,"from","","",2,[[["utf8error"]],["self"]]],[11,"from","","",2,[[["error"]],["self"]]],[11,"from","","",2,[[["errorkind"]],["self"]]],[11,"from","","",3,[[["error"]],["self"]]],[11,"from","","",3,[[["str"]],["self"]]],[11,"from","","",3,[[["string"]],["self"]]],[11,"from","","",2,[[["str"]],["self"]]],[11,"from","","",2,[[["string"]],["self"]]],[11,"clone","i3nator::configfiles","",0,[[["self"]],["configfileimpl"]]],[11,"clone","i3nator::layouts","",5,[[["self"]],["layout"]]],[11,"clone","i3nator::projects","",6,[[["self"]],["project"]]],[11,"clone","i3nator::types","",7,[[["self"]],["config"]]],[11,"clone","","",8,[[["self"]],["general"]]],[11,"clone","","",12,[[["self"]],["layout"]]],[11,"clone","","",9,[[["self"]],["application"]]],[11,"clone","","",10,[[["self"]],["applicationcommand"]]],[11,"clone","","",11,[[["self"]],["exec"]]],[11,"clone","","",13,[[["self"]],["exectype"]]],[11,"default","","",10,[[],["applicationcommand"]]],[11,"eq","i3nator::configfiles","",0,[[["self"],["configfileimpl"]],["bool"]]],[11,"ne","","",0,[[["self"],["configfileimpl"]],["bool"]]],[11,"eq","i3nator::layouts","",5,[[["layout"],["self"]],["bool"]]],[11,"ne","","",5,[[["layout"],["self"]],["bool"]]],[11,"eq","i3nator::projects","",6,[[["self"],["project"]],["bool"]]],[11,"ne","","",6,[[["self"],["project"]],["bool"]]],[11,"eq","i3nator::types","",7,[[["self"],["config"]],["bool"]]],[11,"ne","","",7,[[["self"],["config"]],["bool"]]],[11,"eq","","",8,[[["self"],["general"]],["bool"]]],[11,"ne","","",8,[[["self"],["general"]],["bool"]]],[11,"eq","","",12,[[["layout"],["self"]],["bool"]]],[11,"ne","","",12,[[["layout"],["self"]],["bool"]]],[11,"eq","","",9,[[["self"],["application"]],["bool"]]],[11,"ne","","",9,[[["self"],["application"]],["bool"]]],[11,"eq","","",10,[[["applicationcommand"],["self"]],["bool"]]],[11,"ne","","",10,[[["applicationcommand"],["self"]],["bool"]]],[11,"eq","","",11,[[["self"],["exec"]],["bool"]]],[11,"ne","","",11,[[["self"],["exec"]],["bool"]]],[11,"eq","","",13,[[["self"],["exectype"]],["bool"]]],[11,"deref","i3nator::layouts","",5,[[["self"]],["configfileimpl"]]],[11,"deref","i3nator::projects","",6,[[["self"]],["configfileimpl"]]],[11,"fmt","i3nator::configfiles","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","i3nator::errors","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","i3nator::layouts","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","i3nator::projects","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","i3nator::types","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","i3nator::errors","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"source","","",2,[[["self"]],[["option",["error"]],["error"]]]],[11,"new","","",2,[[["errorkind"],["state"]],["error"]]],[11,"from_kind","","",2,[[],["self"]]],[11,"with_chain","","",2,[[["k"],["e"]],["self"]]],[11,"kind","","",2,[[["self"]]]],[11,"iter","","",2,[[["self"]],["iter"]]],[11,"chain_err","","",2,[[["f"]],["self"]]],[11,"backtrace","","",2,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"extract_backtrace","","",2,[[["error"]],[["option",["internalbacktrace"]],["internalbacktrace"]]]],[11,"deserialize","i3nator::types","",7,[[["__d"]],["result"]]],[11,"deserialize","","",8,[[["__d"]],["result"]]],[11,"deserialize","","",12,[[["__d"]],["result"]]],[11,"deserialize","","",9,[[["__d"]],["result"]]],[11,"deserialize","","",10,[[["__d"]],["result"]]],[11,"deserialize","","",11,[[["__d"]],["result"]]],[11,"deserialize","","",13,[[["__d"]],["result"]]]],"p":[[3,"ConfigFileImpl"],[8,"ConfigFile"],[3,"Error"],[4,"ErrorKind"],[8,"ResultExt"],[3,"Layout"],[3,"Project"],[3,"Config"],[3,"General"],[3,"Application"],[3,"ApplicationCommand"],[3,"Exec"],[4,"Layout"],[4,"ExecType"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);