var searchIndex={};
searchIndex["i3nator"] = {"doc":"i3nator is [Tmuxinator][gh-tmuxinator] for the [i3 window…","i":[[0,"errors","i3nator","Errors, using [`error-chain`][error-chain].",null,null],[3,"Error","i3nator::errors","The Error type.",null,null],[12,"0","","The kind of the error.",0,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Msg","","A convenient variant for String.",1,null],[13,"I3EstablishError","","Error caused by `i3ipc`, on establishing a connection.",1,null],[13,"I3MessageError","","Error caused by `i3ipc`, on sending a message.",1,null],[13,"IoError","","Error mapping to `std::io::Error`.",1,null],[13,"Utf8Error","","Error mapping to `std::str::Utf8Error`.",1,null],[13,"TomlError","","Error caused by `toml`, on deserializing using Serde.",1,null],[13,"CommandSplittingFailed","","An error that can occur when splitting a string into a…",1,null],[13,"EditorNotFound","","An error that occurs when the default editor is not…",1,null],[13,"InvalidUtF8Path","","An error that occurs when a `Path` (i.e. `OsStr`) cannot…",1,null],[13,"PathDoesntExist","","An error that occurs if a specified path does not exist.",1,null],[13,"NoProjectExist","","An error that occurs if no project exists.",1,null],[13,"ProjectExists","","An error that occurs if a project under the same name…",1,null],[13,"TextOrKeyInputFailed","","An error that occurs if text or key-presses could not be…",1,null],[13,"UnknownProject","","An error that occurs if a project does not exist under a…",1,null],[6,"Result","","Convenient wrapper around `std::Result`.",null,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with…",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the…",2,[[["f"]],[["result",["error"]],["error"]]]],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",0,[[["errorkind"]],["error"]]],[11,"with_chain","","Constructs a chained error from another error and a kind,…",0,[[["k"],["e"]],["error"]]],[11,"kind","","Returns the kind of the error.",0,[[["self"]],["errorkind"]]],[11,"iter","","Iterates over the error chain.",0,[[["self"]],["errorchainiter"]]],[11,"backtrace","","Returns the backtrace associated with this error.",0,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"description","","A string describing the error kind.",1,[[["self"]],["str"]]],[0,"projects","i3nator","Module for project handling.",null,null],[3,"Project","i3nator::projects","A structure representing a `i3nator` project.",null,null],[12,"name","","The name of the project.",3,null],[12,"path","","The path to the project configuration.",3,null],[5,"list","","Get a list of all project names.",null,[[],[["osstring"],["vec",["osstring"]]]]],[11,"create","","Create a project given a `name`.",3,[[["s"]],["result"]]],[11,"create_from_template","","Create a project given a `name`, pre-filling the…",3,[[["s"]],["result"]]],[11,"from_path","","Opens an existing project for a given path.",3,[[["p"]],["result"]]],[11,"open","","Opens an existing project using a `name`.",3,[[["s"]],["result"]]],[11,"config","","Gets the project's configuration, loading and storing it…",3,[[["self"]],[["result",["config"]],["config"]]]],[11,"copy","","Create a copy of the current project, that is a copy of…",3,[[["s"],["self"]],["result"]]],[11,"delete","","Delete this project's configuration from disk.",3,[[["self"]],["result"]]],[11,"rename","","Rename the current project.",3,[[["s"],["self"]],["result"]]],[11,"start","","Start the project.",3,[[["osstr"],["str"],["option",["str"]],["self"],["option",["osstr"]],["i3connection"]],["result"]]],[11,"verify","","This verifies the project's configuration, without storing…",3,[[["self"]],["result"]]],[0,"types","i3nator","The types in this module make up the structure of the…",null,null],[3,"Config","i3nator::types","This is the parent type defining the complete project…",null,null],[12,"general","","The general configuration section.",4,null],[12,"applications","","The applications configuration list.",4,null],[3,"General","","The general configuration section.",null,null],[12,"working_directory","","The working directory defines in which directory-context…",5,null],[12,"workspace","","If the workspace is `Some`, `i3` will be instructed to…",5,null],[12,"layout","","The layout to append to a workspace.",5,null],[3,"Application","","The applications configuration.",null,null],[12,"command","","The command used for starting an application.",6,null],[12,"working_directory","","The working directory defines in which directory-context…",6,null],[12,"exec","","Commands to execute or keys to simulate after application…",6,null],[3,"ApplicationCommand","","The command used for starting an application.",null,null],[12,"program","","The executable to start.",7,null],[12,"args","","A list of arguments to pass to the executable.",7,null],[3,"Exec","","Commands to execute or keys to simulate after application…",null,null],[12,"commands","","List of text or keys to input into the application.",8,null],[12,"exec_type","","Defines how the commands above should be interpreted.",8,null],[12,"timeout","","Specify a timeout after which a command has to be…",8,null],[4,"ExecType","","Defines how the commands in [`Exec`][struct-Exec] should…",null,null],[13,"Text","","Interpret the commands given as separate text-lines,…",9,null],[13,"TextNoReturn","","Interpret the commands given as text, but do not input a…",9,null],[13,"Keys","","Interpret the commands given as key presses.",9,null],[11,"from","i3nator::errors","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","i3nator::projects","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","i3nator::types","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","i3nator::errors","",0,[[["establisherror"]],["self"]]],[11,"from","","",0,[[["messageerror"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["utf8error"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["errorkind"]],["self"]]],[11,"from","","",0,[[["str"]],["self"]]],[11,"from","","",0,[[["string"]],["self"]]],[11,"from","","",1,[[["str"]],["self"]]],[11,"from","","",1,[[["string"]],["self"]]],[11,"from","","",1,[[["error"]],["self"]]],[11,"clone","i3nator::projects","",3,[[["self"]],["project"]]],[11,"clone","i3nator::types","",4,[[["self"]],["config"]]],[11,"clone","","",5,[[["self"]],["general"]]],[11,"clone","","",6,[[["self"]],["application"]]],[11,"clone","","",7,[[["self"]],["applicationcommand"]]],[11,"clone","","",8,[[["self"]],["exec"]]],[11,"clone","","",9,[[["self"]],["exectype"]]],[11,"default","","",7,[[],["applicationcommand"]]],[11,"eq","i3nator::projects","",3,[[["self"],["project"]],["bool"]]],[11,"ne","","",3,[[["self"],["project"]],["bool"]]],[11,"eq","i3nator::types","",4,[[["config"],["self"]],["bool"]]],[11,"ne","","",4,[[["config"],["self"]],["bool"]]],[11,"eq","","",5,[[["general"],["self"]],["bool"]]],[11,"ne","","",5,[[["general"],["self"]],["bool"]]],[11,"eq","","",6,[[["self"],["application"]],["bool"]]],[11,"ne","","",6,[[["self"],["application"]],["bool"]]],[11,"eq","","",7,[[["self"],["applicationcommand"]],["bool"]]],[11,"ne","","",7,[[["self"],["applicationcommand"]],["bool"]]],[11,"eq","","",8,[[["self"],["exec"]],["bool"]]],[11,"ne","","",8,[[["self"],["exec"]],["bool"]]],[11,"eq","","",9,[[["self"],["exectype"]],["bool"]]],[11,"deref","i3nator::errors","",0,[[["self"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","i3nator::projects","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","i3nator::types","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","i3nator::errors","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],[["error"],["option",["error"]]]]],[11,"new","","",0,[[["state"],["errorkind"]],["error"]]],[11,"from_kind","","",0,[[],["self"]]],[11,"with_chain","","",0,[[["k"],["e"]],["self"]]],[11,"kind","","",0,[[["self"]]]],[11,"iter","","",0,[[["self"]],["errorchainiter"]]],[11,"backtrace","","",0,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"extract_backtrace","","",0,[[["error"]],[["arc",["backtrace"]],["option",["arc"]]]]],[11,"deserialize","i3nator::types","",4,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"deserialize","","",6,[[["__d"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]],[11,"deserialize","","",8,[[["__d"]],["result"]]],[11,"deserialize","","",9,[[["__d"]],["result"]]]],"p":[[3,"Error"],[4,"ErrorKind"],[8,"ResultExt"],[3,"Project"],[3,"Config"],[3,"General"],[3,"Application"],[3,"ApplicationCommand"],[3,"Exec"],[4,"ExecType"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);